# SPDX-FileCopyrightText: 2025 IObundle
#
# SPDX-License-Identifier: MIT

name: CI

# Set default shell as interactive (source ~/.bashrc)
defaults:
  run:
    shell: bash -ieo pipefail {0}

# Run only one instance of this workflow at a time
# cancel-in-progress: stop running workflow and run latest instead
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  # Allow manual workflow runs
  workflow_dispatch:

jobs:

  test1:
    runs-on: self-hosted
    timeout-minutes: 10
    if: ${{ !cancelled() }}
    needs: []

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Clean untracked files and directories (like old submodules)
        run: git clean -ffdx
      - name: run test1 pc-emul
        run: |
          make clean;\
          make pc-emul-run TEST=test1
      - name: run test1 sim
        run: |
          make clean;\
          make sim-run TEST=test1

  test2:
    runs-on: self-hosted
    timeout-minutes: 40
    if: ${{ !cancelled() }}
    needs: []

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Clean untracked files and directories (like old submodules)
        run: git clean -ffdx
      - name: run test2 pc-emul
        run: |
          make clean;\
          make pc-emul-run TEST=test2
      - name: run test2 sim
        run: |
          make clean;\
          make sim-run TEST=test2

  lint-FUs:
    runs-on: self-hosted
    timeout-minutes: 10
    if: ${{ !cancelled() }}
    needs: []

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Clean untracked files and directories (like old submodules)
        run: git clean -ffdx
      - name: lint all Versat FUs
        run: make lint-all-fus
